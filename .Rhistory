inv
x=matrix(c(1,2,3, 0,1,4, 5,6,0),nrow=3,ncol=3,byrow=TRUE)
x
m = makeCacheMatrix(x)
x=matrix(c(1,2,3, 0,1,4, 5,6,0),nrow=3,ncol=3,byrow=TRUE)
m = makeCacheMatrix(x)
m = makeCacheMatrix(x)
m=makeCacheMatrix
m=makeCacheMatrix(x)
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x=matrix(), ...) {
m<-x$getmatrix()
if(!is.null(m)){
message("getting cached data")
return(m)
}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
x=matrix(4,2,2)
x
m=makeCacheMatrix(x)
m$get()
cacheSolve(m)
x=matrix(1:4,2,2)
m=makeCacheMatrix(x)
m$get()
cacheSolve(m)
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
getwd()
list.files()
ls
ls()
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
x=matrix(1:4,2,2)
x
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
cacheSolve(m)
x<- matrix(data = c(4,2,7,6,4,3,3,6), nrow = 4, ncol = 4)
cacheSolve(m)
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
x<- matrix(data = c(4,2,7,6,4,3,3,6), nrow = 4, ncol = 4)
cacheSolve(m)
x
cacheSolve(m)
x<- matrix(data = c(4,2,7,6,4,3,3,6), nrow = 4, ncol = 4)
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
> makeCacheMatrix <- function(x = matrix()) {
+   m<-NULL
+   set<-function(y){
+   x<<-y
+   m<<-NULL
+ }
+ get<-function() x
+ setmatrix<-function(solve) m<<- solve
+ getmatrix<-function() m
+ list(set=set, get=get,
+    setmatrix=setmatrix,
+    getmatrix=getmatrix)
+ }
>
> cacheSolve <- function(x=matrix(), ...) {
+     m<-x$getmatrix()
+     if(!is.null(m)){
+       message("getting cached data")
+       return(m)
+     }
+     matrix<-x$get()
+     m<-solve(matrix, ...)
+     x$setmatrix(m)
+     m
+ }
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
## Write a short comment describing this function
cacheSolve <- function(x=matrix(), ...) {
m<-x$getmatrix()
if(!is.null(m)){
message("getting cached data")
return(m)
}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
x<- matrix(data = c(4,2,7,6,4,3,3,6), nrow = 4, ncol = 4)
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
x<- matrix(data = c(4,2,7,6,4,3,3,6), nrow = 4, ncol = 4)
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
source('C:/Users/sony/ProgrammingAssignment2/cachematrix.R')
